#################################################################################################
# ndctl collector
#################################################################################################

function ndctl_collector() {
  echo "Running NDCTL Collector"

  if [ ${OPT_VERBOSITY} -ge 1 ]; then
    debug_msg "Using ${NDCTL}"
  fi

  IFS="" #Change the delimiter to prevent Bash separating elements by spaces
  ndctl_args=(
    "version"
    "list -vvv"
    "list --dimms --health --media-errors"
    "list --dimms --health --media-errors --idle"
    "list --regions"
    "list --regions --idle"
    "list --namespaces --device-dax"
    "list --namespaces --device-dax --idle"
  )

  # Initialize the progress bar
  init_progressbar "${#ndctl_args[@]}"

  for arg in ${ndctl_args[@]}; do
    # Provide progress to user
    inc_progressbar

    # Create output files
    # Replace spaces in the command and agrs to be used as the output file name
    OFNAME="ndctl ${arg}"
    OFNAME="${OFNAME// /_}" # Use the Bash string replace feature rather than calling sed or awk
    CMD_OUTPUT_FILE="${OUTPUT_PATH}/${OFNAME}"
    CMD_ERR_OUTPUT_FILE="${OUTPUT_PATH}/${OFNAME}.err"
    # Run the ndctl command with arguments
    # Redirect errors to the error file
    if eval "${NDCTL} ${arg}" 2> ${CMD_ERR_OUTPUT_FILE} 1> ${CMD_OUTPUT_FILE} ; then
      if [ ${OPT_VERBOSITY} -ge 1 ]; then
        debug_msg "${NDCTL} ${arg} Command ${green}succeeded${normal}"
      fi
    else
      if [ ${OPT_VERBOSITY} -ge 1 ]; then
        debug_msg "${NDCTL} ${arg} Command ${red}failed${normal}"
      fi
    fi
  done
  echo ""
}

#################################################################################################
# Main
#################################################################################################

ndctl_collector

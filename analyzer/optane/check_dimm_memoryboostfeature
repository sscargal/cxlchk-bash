#!/usr/bin/env bash
#set -x

# Prevent repeated sourcing
if [ -n "${__MODULE_CHECK_DIMM_MEMORYBOOSTFEATURE_}" ]; then
  return
fi
__MODULE_CHECK_DIMM_MEMORYBOOSTFEATURE_="Loaded"

# Check if DIMM MemoryBandwidthBoostFeature is Enabled or Disabled in the BIOS. 
# Both Enabled and Disabled are valid. Just need to report the state to the user.
# MemoryBandwidthBoostFeature is only available on Optane 200 Series and later.
# This check will be skipped on Optane 100 Series
function optane_check_dimm_memoryboostfeature() {
  local FNAME=$1        # File name to process
  local MemoryBandwidthBoostFeature=false # Used for reporting

  # Exit the function with INFO message if the file to process doesn't exist
  if [[ ! -f ${FNAME} ]] ; then
    rule_result SKIPPED "Could not process '${FNAME}'. File not found"
    return
  fi

  # Get the DimmID, Property, and Value fields from the input file
  while IFS='|' read -r DimmID Property Value 
  do
    DimmID="$(echo ${DimmID})"         # Remove leading and trailing whitespaces
    PropertyType="$(echo ${Property})" # Remove leading and trailing whitespaces
    PropertyValue="$(echo ${Value})"   # Remove leading and trailing whitespaces
    if [ ${OPT_VERBOSITY} -ge 3 ]; then
      debug_msg "DimmID ${DimmID}: ${Property}=${Value}"
    fi
    # Report if the platform has MemoryBandwidthBoostFeature Enabled or Disabled
    if [[ "${PropertyValue}" == "Enabled" ]]; then
      MemoryBandwidthBoostFeature=true
    fi
  done <<<  "$(${GREP} MemoryBandwidthBoostFeature ${FNAME})" || return 0

  # Return the state to the user
  if [ "${MemoryBandwidthBoostFeature}" = true ] ; then
    rule_result INFO "Memory Bandwidth Boot Feature is Enabled"
  else
    rule_result INFO "Memory Bandwidth Boot Feature is Disabled"
  fi
}

# Call the main function
optane_check_dimm_memoryboostfeature "${OUTPUT_PATH}/ipmctl_show_-a_-dimm.psv"

#!/usr/bin/env bash
#set -x

# Prevent repeated sourcing 
if [ -n "${__MODULE_CHECK_DIMM_CAPACITY__}" ]; then
  return
fi
__MODULE_CHECK_DIMM_CAPACITY__="Loaded"

# Validate all PMem modules have the same capacity 
function optane_check_dimm_capacity() {
  local FNAME=$1        # File name to process
  local ERR_STATE=false # Used for error reporting

  # Exit the function with INFO message if the file to process doesn't exist
  if [[ ! -f ${FNAME} ]] ; then 
    rule_result SKIPPED "Could not process '${FNAME}'. File not found"
    return
  fi

  # Create Associative Arrays
  declare -A DIMM_CAPACITY_ARR		# Key is the DIMM_ID; Value is the Capacity 
  declare -A DIMM_CAPACITY_COUNT_ARR 	# Key is the Capacity; Value is a list of DIMMs with this Capacity 

  # Get the DIMMID and Capacity fields from the input file
  while IFS='|' read -r DimmID Capacity LockState HealthState FWVersion
  do
    DimmID="$(echo ${DimmID})"		# Remove leading and trailing whitespaces
    Capacity="$(echo ${Capacity})"      # Remove leading and trailing whitespaces
    if [ ${OPT_VERBOSITY} -ge 3 ]; then
      debug_msg "DIMM Capacity: ${DimmID}=${Capacity}"
    fi
    # Add this entry to the capacity array
    DIMM_CAPACITY_ARR[${DimmID}]=${Capacity}
    # Add the DIMM to the Capacity array
    DIMM_CAPACITY_COUNT_ARR[${Capacity}]+="${DimmID},"
  done <<<  "$(tail -n +3 ${FNAME})" # Skip the header lines (1&2), and start reading from line 3

  # If the capacity counter array has more than one capacity, we have found different sized modules
  if [[ ${#DIMM_CAPACITY_COUNT_ARR[@]} -gt 1 ]] ; then
    info_msg "Multiple (${#DIMM_CAPACITY_COUNT_ARR[@]}) PMem capacities found! All PMem modules should have the same capacity." 2
    for d in "${!DIMM_CAPACITY_COUNT_ARR[@]}" ; do # Display the full list of DimmIDs and Capacities found
      DIMM_LIST=${DIMM_CAPACITY_COUNT_ARR[${d}]::-1} # Strip the last character ',' from the string
      info_msg "${d} = ${DIMM_LIST}" 2
      ERR_STATE=true
    done
  fi

  # Return the final PASS/FAIL to the user
  if [ "${ERR_STATE}" = true ] ; then
    rule_result FAILED "One or more PMem modules reported a different capacity to the others. See previous INFO messages."
  else
    rule_result PASSED "All PMem Modules have the same capacity."
  fi

  # Delete the associative arrays
  unset DIMM_CAPACITY_ARR
  unset DIMM_CAPACITY_COUNT_ARR
}

# Call the main function 
optane_check_dimm_capacity "${OUTPUT_PATH}/ipmctl_show_-dimm"
